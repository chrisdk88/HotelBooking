@page "/book"
@inject HttpClient Http
@using Models;
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@using Client.Shared.Utilities


<PageTitle>Andet Hotel Booking</PageTitle>

<h1>Booking</h1>
@if (GlobalAuthState.UserId == null)
{
	<a href="/login" class="btn btn-danger text-white">Man skal være logget ind for at kunne booke <u>log på her</u></a>
}
<EditForm Model="@input" OnValidSubmit="@sendRequest">
	<div class="container">
		<div class="row">
			<div class="col-sm">
				<div class="container, card">
					<div class="row">
						<div class="col-sm">
							<span>Check In</span><br />
							<InputDate required min="@input.inputBooking.startDate.ToString("yyyy-MM-dd")" @bind-Value="input.inputBooking.startDate"></InputDate>
						</div>
						<div class="col-sm">
							<span>Check Out</span><br />
							<InputDate required min="@input.inputBooking.endDate.ToString("yyyy-MM-dd")" @bind-Value="@input.inputBooking.endDate"></InputDate>
						</div>
					</div>
				</div>
			</div>
			<br />
			<div class="col-sm">
				@if (types == null)
				{
					<p><em>Loading...</em></p>
				}
				else
				{
					@foreach (RoomType room in types)
					{
						<div class="container, card">
							@if (bookerrormsg.ContainsKey(room.id))
							{
								<div class="alert alert-danger">
									@bookerrormsg[room.id]
								</div>
							}
							<div class="row">
								<div class="col-sm">
									<img src="https://static01.nyt.com/images/2019/03/24/travel/24trending-shophotels1/24trending-shophotels1-superJumbo.jpg" style="height:100px;">
								</div>
								<div class="col-sm">
									Type: @room.name <br/>
									Senge: @room.bedAmount <br/>
									Pris: @room.price <br/>
								</div>
								<div class="col-sm">
									@if (GlobalAuthState.UserId != null)
									{
										<button type="submit" class="btn btn-primary" value="Book" @onclick="()=>input.typeId = room.id">Book</button>
									}
								</div>
							</div>
						</div>
						<br />
					}
				}
			</div>
		</div>
	</div>
</EditForm>

@code {
	private List<RoomType>? types;
	private uint? roomWithMessage;
	protected override async Task OnInitializedAsync()
	{
		types = await GetListOfTypes();
	}

}
